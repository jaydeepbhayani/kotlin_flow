plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("androidx.navigation.safeargs.kotlin")
    id("dagger.hilt.android.plugin")
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.jaydeepbhayani.league"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        multiDexEnabled true
    }

    buildTypes {
        release {
            buildConfigField 'String', 'ENVIRON', '"prod"'
            minifyEnabled false // false because of loging issues.
            multiDexEnabled true
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [app_name: "League"]
        }
        debug {
            applicationIdSuffix ".debug"
            //signingConfig signingConfigs.debug_signing_keys
            buildConfigField 'String', 'ENVIRON', '"uat"'
            //minifyEnabled false
            //multiDexEnabled true
            //shrinkResources false
            //zipAlignEnabled true
            debuggable true
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def formattedDate = new Date().format('HH_mm')
                    def flavor = variant.name
                    def versionName = variant.versionName
                    outputFileName = "${rootProject.getName()}_${formattedDate}-${flavor}-v${versionName}.apk"
                }
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [app_name: "League - Debug"]
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}-${variant.versionCode}.apk"
        }
    }
    flavorDimensions "default"
    productFlavors {
        league {
            buildConfigField 'String', 'CONCEPT', '"user"'
            buildConfigField 'String', 'BASE_URL', '"http://"'
            buildConfigField "Boolean", "SHOW_VERSION_TOAST", 'true'
            //signingConfig signingConfigs.release
            manifestPlaceholders = [
                    ENABLE_CLEARTEXT_TRAFFIC: "false",
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.core:core-splashscreen:1.0.0'
// core
    implementation 'androidx.multidex:multidex:2.0.1'

    //navigation component
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.1'
    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:2.5.1")

    //recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // Kotlin Co-routines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.2'

    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3"
    implementation 'com.google.code.gson:gson:2.9.0'

    //image loading and caching library
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    //animation effect
    implementation 'com.airbnb.android:lottie:5.0.3'
    implementation 'jp.wasabeef:recyclerview-animators:4.0.2'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.43.2"
    kapt "com.google.dagger:hilt-android-compiler:2.43.2"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // For instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.43.2'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.43.2'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.43.2'
    kaptTest 'com.google.dagger:hilt-compiler:2.43.2'
}
// Allow references to generated code
kapt {
    correctErrorTypes = true
}
